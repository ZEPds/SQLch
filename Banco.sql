-- MySQL Script generated by MySQL Workbench
-- Thu Oct 20 07:34:21 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DB_BANCO
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `DB_BANCO` ;

-- -----------------------------------------------------
-- Schema DB_BANCO
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB_BANCO` DEFAULT CHARACTER SET utf8 ;
USE `DB_BANCO` ;

-- -----------------------------------------------------
-- Table `DB_BANCO`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Cliente` (
  `idCliente` INT NOT NULL,
  `nombre` VARCHAR(50) NULL,
  `fecha de nacimiento` DATE NULL,
  `cuenta` VARCHAR(18) NULL,
  `clave` VARCHAR(18) NULL,
  `tarjeta` VARCHAR(16) NULL,
  `celular` VARCHAR(10) NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_BANCO`.`Bancos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Bancos` (
  `idBancos` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idBancos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_BANCO`.`Tipo_transaccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Tipo_transaccion` (
  `idTipo_transaccion` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipo_transaccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_BANCO`.`Estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Estados` (
  `idEstados` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idEstados`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_BANCO`.`Errores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Errores` (
  `idErrores` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idErrores`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_BANCO`.`Transaccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_BANCO`.`Transaccion` (
  `idTransaccion` INT NOT NULL,
  `idCliente` INT NULL,
  `idBanco` INT NULL,
  `monto` DECIMAL NULL,
  `tipo` INT NULL,
  `estado` INT NULL,
  `error` INT NULL DEFAULT NULL,
  PRIMARY KEY (`idTransaccion`),
  INDEX `idCliente_idx` (`idCliente` ASC) VISIBLE,
  INDEX `IdBanco_idx` (`idBanco` ASC) VISIBLE,
  INDEX `tipo_idx` (`tipo` ASC) VISIBLE,
  INDEX `estado_idx` (`estado` ASC) VISIBLE,
  INDEX `error_idx` (`error` ASC) VISIBLE,
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `DB_BANCO`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `IdBanco`
    FOREIGN KEY (`idBanco`)
    REFERENCES `DB_BANCO`.`Bancos` (`idBancos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tipo`
    FOREIGN KEY (`tipo`)
    REFERENCES `DB_BANCO`.`Tipo_transaccion` (`idTipo_transaccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `estado`
    FOREIGN KEY (`estado`)
    REFERENCES `DB_BANCO`.`Estados` (`idEstados`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `error`
    FOREIGN KEY (`error`)
    REFERENCES `DB_BANCO`.`Errores` (`idErrores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Cliente` (`idCliente`, `nombre`, `fecha de nacimiento`, `cuenta`, `clave`, `tarjeta`, `celular`) VALUES (1, 'FRANCISCO NICOLINI', '30/12/1999', '0001', '1234', '0000000000000001', '1144444444');
INSERT INTO `DB_BANCO`.`Cliente` (`idCliente`, `nombre`, `fecha de nacimiento`, `cuenta`, `clave`, `tarjeta`, `celular`) VALUES (2, 'ROBERTO PEREZ', '15/08/1986', '0002', '3321', '0000000000000002', '1155555555');
INSERT INTO `DB_BANCO`.`Cliente` (`idCliente`, `nombre`, `fecha de nacimiento`, `cuenta`, `clave`, `tarjeta`, `celular`) VALUES (3, 'FERNANDA LOPEZ', '12/04/1990', '0003', '5241', '0000000000000003', '1166666666');
INSERT INTO `DB_BANCO`.`Cliente` (`idCliente`, `nombre`, `fecha de nacimiento`, `cuenta`, `clave`, `tarjeta`, `celular`) VALUES (4, 'ROMINA VEGA', '03/02/2003', '0004', '8924', '0000000000000004', '1177777777');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Bancos`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Bancos` (`idBancos`, `nombre`) VALUES (1, 'BNA');
INSERT INTO `DB_BANCO`.`Bancos` (`idBancos`, `nombre`) VALUES (2, 'BBVA');
INSERT INTO `DB_BANCO`.`Bancos` (`idBancos`, `nombre`) VALUES (3, 'GALICIA');
INSERT INTO `DB_BANCO`.`Bancos` (`idBancos`, `nombre`) VALUES (4, 'PROVINCIA');
INSERT INTO `DB_BANCO`.`Bancos` (`idBancos`, `nombre`) VALUES (5, 'HSBC');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Tipo_transaccion`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Tipo_transaccion` (`idTipo_transaccion`, `nombre`) VALUES (1, 'SALIDA');
INSERT INTO `DB_BANCO`.`Tipo_transaccion` (`idTipo_transaccion`, `nombre`) VALUES (2, 'ENTRADA');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Estados`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Estados` (`idEstados`, `nombre`) VALUES (1, 'EN PROCESO');
INSERT INTO `DB_BANCO`.`Estados` (`idEstados`, `nombre`) VALUES (2, 'FINALIZADA');
INSERT INTO `DB_BANCO`.`Estados` (`idEstados`, `nombre`) VALUES (3, 'CANCELADA');
INSERT INTO `DB_BANCO`.`Estados` (`idEstados`, `nombre`) VALUES (4, 'DEVUELTA');
INSERT INTO `DB_BANCO`.`Estados` (`idEstados`, `nombre`) VALUES (5, 'ERROR');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Errores`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Errores` (`idErrores`, `nombre`) VALUES (1, 'SALDO INSUFICIENTE');
INSERT INTO `DB_BANCO`.`Errores` (`idErrores`, `nombre`) VALUES (2, 'CUENTA DESTINO INEXISTENTE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DB_BANCO`.`Transaccion`
-- -----------------------------------------------------
START TRANSACTION;
USE `DB_BANCO`;
INSERT INTO `DB_BANCO`.`Transaccion` (`idTransaccion`, `idCliente`, `idBanco`, `monto`, `tipo`, `estado`, `error`) VALUES (1, 1, 3, 1500, 1, 2, NULL);

COMMIT;

